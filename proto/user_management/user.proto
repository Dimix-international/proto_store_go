syntax = "proto3";

package user;

option go_package = "melnikov.user.v1;userv1";

service User {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);
    rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDOrEmailResponse);
    rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByIDOrEmailResponse);
    rpc RecoverUser(DeleteOrRecoverUserRequest) returns (DeleteOrRecoverUserResponse);
    rpc DeleteUser(DeleteOrRecoverUserRequest) returns (DeleteOrRecoverUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
};

message UserData {
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    string role = 5;
    int32 rating = 6;
    string created_at = 7;
    string updated_at = 8;
};

message CreateUserRequest {
    string email = 1;
    string password = 2;
    string first_name = 3;
    string last_name = 4;
    string role = 5;
};

message CreateUserResponse {};

message GetAllUsersRequest {
    int32 page = 1;
};

message GetAllUsersResponse {
    repeated UserData users = 1;
};

message GetUserByIDRequest {
    string id = 1;
};

message GetUserByEmailRequest {
    string email = 1;
};

message GetUserByIDOrEmailResponse {
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    string role = 5;
    int32 rating = 6;
    string created_at = 7;
    string updated_at = 8;
};

message DeleteOrRecoverUserRequest {
    string token = 1; 
    string id = 2;
};
message DeleteOrRecoverUserResponse {};

message UpdateUserRequest {
    string token = 1; 
    string email = 2;
    string password = 3;
    string first_name = 4;
    string last_name = 5;
    string role = 6;
    string targetId = 7; 
};

message UpdateUserResponse {
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    string role = 5;
    int32 rating = 6;
    string created_at = 7;
    string updated_at = 8;
};
